package it.sose.advice.mood;

import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import jakarta.xml.ws.Service;

/**
 * This class was generated by Apache CXF 4.1.1
 * 2025-07-12T10:27:43.895+02:00
 * Generated source version: 4.1.1
 *
 */
@WebServiceClient(name = "AdviceMoodImplService",
                  wsdlLocation = "/advice-mood.wsdl",
                  targetNamespace = "http://mood.advice.sose.it/")
public class AdviceMoodImplService extends Service {

    public static final URL WSDL_LOCATION;

    public static final QName SERVICE = new QName("http://mood.advice.sose.it/", "AdviceMoodImplService");
    public static final QName AdviceMoodImplPort = new QName("http://mood.advice.sose.it/", "AdviceMoodImplPort");
    static {
        URL url = AdviceMoodImplService.class.getResource("/advice-mood.wsdl");
        if (url == null) {
            url = AdviceMoodImplService.class.getClassLoader().getResource("/advice-mood.wsdl");
        }
        if (url == null) {
            java.util.logging.Logger.getLogger(AdviceMoodImplService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "/advice-mood.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AdviceMoodImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AdviceMoodImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AdviceMoodImplService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public AdviceMoodImplService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public AdviceMoodImplService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public AdviceMoodImplService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns AdviceMood
     */
    @WebEndpoint(name = "AdviceMoodImplPort")
    public AdviceMood getAdviceMoodImplPort() {
        return super.getPort(AdviceMoodImplPort, AdviceMood.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AdviceMood
     */
    @WebEndpoint(name = "AdviceMoodImplPort")
    public AdviceMood getAdviceMoodImplPort(WebServiceFeature... features) {
        return super.getPort(AdviceMoodImplPort, AdviceMood.class, features);
    }

}
